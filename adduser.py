import os
import random
import sqlite3
import string
from argparse import ArgumentParser
from werkzeug.security import generate_password_hash

# setup parser
parser = ArgumentParser(prog = 'adduser',
                        description = f'add user to the database',
                        epilog='passwords are autogenerated')

parser.add_argument('username', help='user name')
parser.add_argument('-f', '--fake', help='don\'t write to the database', action='store_true')

# get arguments
args = parser.parse_args()
username = args.username
fake = True if args.fake else False

# compute raw password and secure password
character_list = string.ascii_letters + string.digits + string.punctuation
password_raw = ''.join(random.choice(character_list) for x in range(42))
password = generate_password_hash(password_raw)

if not fake:
    # add user to database
    DATABASE = os.path.join('instance', 'flaskr.sqlite')
    with sqlite3.connect(DATABASE) as conn
        conn.execute('INSERT INTO user (username, password) VALUES (?, ?)', (username, password))
        conn.commit()

# display information written to database
print(f'username: {username}')
print(f'password: {password_raw}')
print()
print('please add this information into your Password Manager')

